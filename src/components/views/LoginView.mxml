<?xml version="1.0" encoding="utf-8"?>
<s:VGroup 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"  xmlns:fxg="components.fxg.*"  
	creationComplete="init()">
	
	<fx:Metadata>
		[Event(name="authenticationError", type="events.AuthenticationEvent")]
		[Event(name="authenticationSuccess", type="events.AuthenticationEvent")]
	</fx:Metadata>
	
	<fx:Declarations>
		
		<mx:Validator id="usernameValidator" source="{userID}" property="text" requiredFieldError="The user ID or password is incorrect." />
		<mx:Validator id="passwordValidator" source="{password}" property="text" requiredFieldError="The user ID or password is incorrect." />
		
		<mx:Validator id="firstNameValidator" source="{firstName}" property="text" />
		<mx:Validator id="lastNameValidator" source="{lastName}" property="text" />
		<mx:DateValidator id="birthDateValidator" source="{dateOfBirth}" property="text" />
		<mx:SocialSecurityValidator id="ssnValidator" source="{ssn}" property="text" />
		<mx:StringValidator id="userIDValidator" source="{userID2}" property="text" minLength="4" />
		<mx:EmailValidator id="emailValidator" source="{emailAddress}" property="text" />
		<mx:StringValidator id="password2Validator" source="{password2}" property="text" minLength="6" />
		<mx:StringValidator id="passwordConfValidator" source="{passwordConf}" property="text" minLength="6" />
		
		<mx:EmailValidator id="forgotPasswordEmailValidator" source="{passEmailAddress}" property="text" />
		
		<s:Sine id="sineEasing" easeInFraction="0.1"/>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import events.ApplicationEvent;
			import events.AuthenticationEvent;
			
			import models.ApplicationModel;
			
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			
			import util.StringUtil;
			
			private var vResult:ValidationResultEvent;
			
			[Bindable] private var registeredUserID:String = "thisValueWillBeReplaced";
			[Bindable] private var registeredPassword:String = "thisValueWillBeReplaced";
			
			private var model:ApplicationModel;
			
			public var adminUsername:String = 'pipi';
			
			[Bindable] public var allowAccountCreation:Boolean = true;
			
			private function clearValidationErrors():void 
			{
				hgLoginFail.visible = hgLoginFail.includeInLayout = false; 
				firstNameValidator.validate('dummy');	//these dummies clear all validation errors
				lastNameValidator.validate('dummy');
				birthDateValidator.validate('12/12/2012');
				ssnValidator.validate('123-12-1234');
				userIDValidator.validate('dummy');
				emailValidator.validate('dummy@dummy.com');
				password2Validator.validate('dummy2');
				passwordConfValidator.validate('dummy2');
			}
			
			private function clearValidationErrorsLogin():void 
			{
				userID.text = '';
				password.text = '';
				usernameValidator.validate('james');
				passwordValidator.validate('archer');
				hgLoginFail.visible = hgLoginFail.includeInLayout = false;
			}
			
			private function forgotPasswordHandler():void 
			{
				vResult = forgotPasswordEmailValidator.validate();
				
				if(vResult.type == ValidationResultEvent.VALID) 
				{
					this.currentState = 'passwordSent';
				}
				else 
				{
					Alert.show("Please enter a valid e-mail address");
				}
			}
			
			protected function onLoginClick(event:MouseEvent):void 
			{
				var model:ApplicationModel = AppProperties.getInstance().controller.model;
				
				if( userID.text == adminUsername
					|| (userID.text == 'piim' && password.text == 'password') 
					|| (userID.text == 'james' && password.text == 'archer') 
					|| (userID.text == 'melissa' && password.text == 'archer') 
					|| (userID.text == 'tiffany' && password.text == 'janeway') 
					|| (userID.text == 'robert' && password.text == 'janeway') 
					|| (userID.text == 'albert' && password.text == 'sisko') 
					|| (userID.text == 'doris' && password.text == 'sisko') 
					|| (userID.text == registeredUserID && password.text == registeredPassword) ) 
				{
					if(userID.text == 'pipi' || (userID.text == 'piim' && password.text == 'password')) model.fullname = "Isaac Goodman";
					else if(userID.text == 'james' && password.text == 'archer') model.fullname = "James Archer";
					else if(userID.text == 'melissa' && password.text == 'archer') model.fullname = "Melissa Archer";
					else if(userID.text == 'tiffany' && password.text == 'janeway') model.fullname = "Tiffany Janeway";
					else if(userID.text == 'robert' && password.text == 'janeway') model.fullname = "Robert Janeway";
					else if(userID.text == 'albert' && password.text == 'sisko') model.fullname = "Albert Sisko";
					else if(userID.text == 'doris' && password.text == 'sisko') model.fullname = "Doris Sisko";
					//else, fullname will contain the name the user indicated at registration.
					
					var evt:AuthenticationEvent = new AuthenticationEvent( AuthenticationEvent.SUCCESS, true );
					dispatchEvent( evt );
					
					clearValidationErrorsLogin();
					
					bcLogin.height = 328;
				}
				else 
				{
					//	here we are forcing the userID and password text fields to show red borders, by validating them as if they had empty values.
					usernameValidator.validate('');
					passwordValidator.validate('');
					
					hgLoginFail.visible = hgLoginFail.includeInLayout = true;
					bcLogin.height = 346;
				}
			}
			
			protected function createAccountHandler():void 
			{
				var isInputInvalid:Boolean = false;
				
				vResult = firstNameValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = lastNameValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = birthDateValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = ssnValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = userIDValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = emailValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = password2Validator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				vResult = passwordConfValidator.validate();
				if(vResult.type == ValidationResultEvent.INVALID) isInputInvalid = true;
				
				if(password2.text != passwordConf.text) 
				{
					passwordConf.errorString = "Password was not confirmed correctly";
					isInputInvalid = true;
				}
				
				if(isInputInvalid) 
				{
					hgLoginFail.visible = hgLoginFail.includeInLayout = true;
					bcLogin.height = 418;
				}
				else 
				{
					registeredUserID = userID2.text;
					registeredPassword = password2.text;
					
					model.fullname = StringUtil.titleCase(firstName.text.toLowerCase() + " " + lastName.text.toLowerCase());
					
					firstName.text = lastName.text = userID2.text = emailAddress.text = password2.text = passwordConf.text = "";
					dateOfBirth.text = "MM/DD/YYYY";
					ssn.text = '000-00-0000';
					
					clearValidationErrors();
					
					currentState = 'default';
					
					Alert.show("You may now log in with the user ID and password you just selected","Login");
				}
			}
			
			private function onCreateAccount():void
			{
				currentState = 'default';
				
				clearValidationErrors();
			}
			
			private function init():void
			{
				
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default" />
		<s:State name="createAccount" />
		<s:State name="forgotPassword" />
		<s:State name="passwordSent" />
	</s:states>
	
	<s:transitions>
		<!--<s:Transition id="profTransition" fromState="loggedIn" toState="profile">
		<s:Sequence id="t1" targets="{[home, profile]}">             
		<mx:Blur duration="500" blurXFrom="10.0" blurXTo="0.0" 
		blurYFrom="10.0" blurYTo="0.0"/> 
		</s:Sequence>
		</s:Transition>-->
		<s:Transition fromState="default" toState="createAccount">
			<s:Parallel>
				<s:Resize target="{bcLogin}" duration="300" easer="{sineEasing}" />
				<!--<s:Move target="{hgLoginButton}" duration="300" easer="{sineEasing}" />-->
				<s:Fade target="{hgLoginButton}" duration="450" alphaFrom="0" alphaTo="1" />
				<!--<mx:Blur target="{hgFormContent}" duration="300" />-->
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="createAccount" toState="default">
			<s:Parallel>
				<s:Resize target="{bcLogin}" duration="300" easer="{sineEasing}" />
				<!--<s:Move target="{hgLoginButton}" duration="300" easer="{sineEasing}" />-->
				<s:Fade target="{hgLoginButton}" duration="300" alphaFrom="0" alphaTo="1" />
				<!--<mx:Blur target="{vgFormContent}" duration="300" />-->
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="default" toState="forgotPassword">
			<s:Parallel>
				<s:Resize target="{bcLogin}" duration="300" easer="{sineEasing}" />
				<s:Fade target="{hgLoginButton}" duration="450" alphaFrom="0" alphaTo="1" />
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="forgotPassword" toState="default">
			<s:Parallel>
				<s:Resize target="{bcLogin}" duration="300" easer="{sineEasing}" />
				<s:Fade target="{hgLoginButton}" duration="300" alphaFrom="0" alphaTo="1" />
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="forgotPassword" toState="passwordSent">
			<s:Parallel>
				<s:Resize target="{bcLogin}" duration="300" easer="{sineEasing}" />
				<s:Fade target="{hgLoginButton}" duration="450" alphaFrom="0" alphaTo="1" />
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="passwordSent" toState="default">
			<s:Parallel>
				<s:Resize target="{bcLogin}" duration="300" easer="{sineEasing}" />
				<s:Fade target="{hgLoginButton}" duration="300" alphaFrom="0" alphaTo="1" />
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	
	<s:BorderContainer width="1024" height="38" borderAlpha="0">
		
		<s:layout>
			<s:HorizontalLayout />
		</s:layout>
		
		<s:backgroundFill>
			<s:LinearGradient rotation="270">
				<s:GradientEntry color="0xB3B3B3" alpha="0" ratio="0" />
				<s:GradientEntry color="0x999999" alpha="1" ratio="1" /> <!--ratio="0.8834"-->
			</s:LinearGradient>
		</s:backgroundFill>
		
		<s:VGroup paddingLeft="27" paddingTop="6">
			<fxg:healthBoardLogoGray />
		</s:VGroup>
		
	</s:BorderContainer>
	
	<s:VGroup width="100%" horizontalAlign="center" paddingTop="156" >
		
		<s:BorderContainer 
			id="bcLogin" width="528" height="328" 
			width.createAccount="619" height.createAccount="400" 
			height.forgotPassword="256" height.passwordSent="200" 
			backgroundColor="0xFFFFFF" backgroundAlpha="0.2" borderColor="0xFFFFFF" borderAlpha="0.6" cornerRadius="3">
			
			<s:layout>
				<s:VerticalLayout />
			</s:layout>
			
			<s:Label text="Login" text.createAccount="Create Account" text.forgotPassword="Forgot Password" text.passwordSent="Temporary Password Sent" styleName="loginBoxGreenBoldTitle" paddingTop="26" paddingLeft="44" />
			
			<s:HGroup paddingLeft="44" paddingTop="26" styleName="loginBoxWhiteText" visible="{allowAccountCreation}">
				
				<s:Label text="If you don't have one already, please" text.createAccount="Already have an account? Click here to" text.forgotPassword="{'Please enter the email address you used to register.\nYou will receive a temporary password via email.'}" text.passwordSent="{'A temporary password has been sent to your email address.\nPlease check your email.'}" />
				
				<s:VGroup paddingTop="-7" paddingLeft="-10" includeIn="default,createAccount">
					<mx:LinkButton id="btnCreateAccount" label="create account." label.createAccount="login." color="0xFF931E" textRollOverColor="0xFF931E" textSelectedColor="0xFF931E" skin="{null}" rollOver="btnCreateAccount.styleName='linkBtnUnderline';" rollOut="btnCreateAccount.styleName='linkBtn';" click="{currentState = 'createAccount'; hgLoginFail.visible = hgLoginFail.includeInLayout = false;}" click.createAccount="onCreateAccount()" /><!--styleName="loginBoxWhiteText" textDecoration="underline" -->
				</s:VGroup>
				
			</s:HGroup>	
			
			<s:HGroup id="hgLoginFail" includeInLayout="false" visible="false" paddingLeft="41" paddingTop="-6">
				
				<s:BorderContainer borderVisible="false" backgroundColor="0xD0D0D0" width="351" width.createAccount="253" height="18">
					<s:layout>
						<s:VerticalLayout paddingTop="2" paddingLeft="3" />
					</s:layout>
					<s:Label text="The user ID or password you entered is incorrect." text.createAccount="Please complete all required fields." color="0xCC0000" fontWeight="bold" fontSize="16" />
				</s:BorderContainer>
				
			</s:HGroup>
			
			<mx:Form id="myForm" paddingLeft="44" width="100%" defaultButton="{btnLogin}">
				
				<s:VGroup id="vgFormContent" includeIn="default">
					
					<s:Label text="User ID" styleName="loginBoxWhiteBoldText" paddingTop="-2" paddingBottom="-4" />
					
					<mx:FormItem paddingLeft="-14">
						<s:TextInput id="userID" styleName="formTextField" width="228" height="26" />
					</mx:FormItem>
					
					<s:Label text="Password" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
					
					<mx:FormItem paddingLeft="-14">
						<s:TextInput id="password" styleName="formTextField" width="228" height="26" displayAsPassword="true" />
					</mx:FormItem>
					
					<mx:LinkButton id="btnForgotPassword" label="Forgot User ID or Password?" color="0xFF931E" textRollOverColor="0xFF931E" textSelectedColor="0xFF931E" fontSize="16" fontStyle="italic" skin="{null}" paddingLeft="-3" paddingTop="10" rollOver="btnForgotPassword.styleName='linkBtnUnderline';" rollOut="btnForgotPassword.styleName='linkBtn';" click="{currentState = 'forgotPassword'; clearValidationErrorsLogin();}" />	<!--textDecoration="underline" -->
					
				</s:VGroup>
				
				<s:HGroup id="hgFormContent" includeIn="createAccount" gap="34">
					
					<s:VGroup>
						
						<s:Label text="First Name" styleName="loginBoxWhiteBoldText" paddingTop="-2" paddingBottom="-4" />
						
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="firstName" styleName="formTextField" width="228" height="26" />
						</mx:FormItem>
						
						<s:Label text="Last Name" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
						
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="lastName" styleName="formTextField" width="228" height="26" />
						</mx:FormItem>
						
						<s:Label text="Date of Birth" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
						
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="dateOfBirth" text="MM/DD/YYYY" styleName="formTextField" width="159" height="26" click="{if(dateOfBirth.text == 'MM/DD/YYYY') dateOfBirth.text = ''}" />
						</mx:FormItem>
						
						<s:Label text="Social Security Number" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
						
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="ssn" text="000-00-0000" styleName="formTextField" width="159" height="26" click="{if(ssn.text == '000-00-0000') ssn.text = ''}" />
						</mx:FormItem>
						
					</s:VGroup>
					
					<s:VGroup paddingTop="-2">
						
						<s:Line yFrom="0" yTo="210">
							<s:stroke>
								<s:SolidColorStroke color="#FFFFFF" weight="1" alpha=".6"/>
							</s:stroke>
						</s:Line>
						
					</s:VGroup>
					
					<s:VGroup>
						
						<s:Label text="User ID" styleName="loginBoxWhiteBoldText" paddingTop="-2" paddingBottom="-4" />
						
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="userID2" styleName="formTextField" width="228" height="26" />
						</mx:FormItem>
						
						<s:Label text="E-mail Address" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="emailAddress" styleName="formTextField" width="228" height="26" />
						</mx:FormItem>
						
						<s:Label text="Password" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="password2" styleName="formTextField" width="228" height="26" displayAsPassword="true" />
						</mx:FormItem>
						
						<s:Label text="Password Confirmation" styleName="loginBoxWhiteBoldText" paddingTop="9" paddingBottom="-4" />
						<mx:FormItem paddingLeft="-14">
							<s:TextInput id="passwordConf" styleName="formTextField" width="228" height="26" displayAsPassword="true" />
						</mx:FormItem>
					</s:VGroup>
					
				</s:HGroup>
				
				<s:VGroup includeIn="forgotPassword">
					
					<s:Label text="E-mail Address" styleName="loginBoxWhiteBoldText" paddingTop="-2" paddingBottom="-4" />
					
					<mx:FormItem paddingLeft="-14">
						<s:TextInput id="passEmailAddress" styleName="formTextField" width="228" height="26" />
					</mx:FormItem>
					
				</s:VGroup>
				
				<s:HGroup id="hgLoginButton" horizontalAlign="center" width="100%" paddingTop="26" paddingLeft="-28">
					
					<s:Button id="btnCancel" label="Cancel" fontSize="14" includeIn="forgotPassword" width="103" height="24" click="{currentState = 'default';}" />
					
					<s:Button id="btnLogin" label="Login" label.createAccount="Submit" label.forgotPassword="Submit" label.passwordSent="Close" width="103" height="24" styleName="orangeButton" click="onLoginClick(event)" click.createAccount="createAccountHandler()" click.forgotPassword="forgotPasswordHandler();" click.passwordSent="{currentState = 'default';}" />
					
				</s:HGroup>
				
			</mx:Form>
			
		</s:BorderContainer>
		
	</s:VGroup>

</s:VGroup>
