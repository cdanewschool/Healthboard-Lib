<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="405" height="338"
			   close="PopUpManager.removePopUp(this);" skinClass="skins.general.myHeaderlessTitleWindow" color="0x000000">
	<fx:Script>
		<![CDATA[
			import controllers.ExerciseController;
			
			import models.modules.ExerciseModel;
			
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectProxy;
			
			import spark.components.TextInput;
			import spark.events.DropDownEvent;
			
			[Bindable] public var controller:ExerciseController = AppProperties.getInstance().controller.exerciseController as ExerciseController;
			[Bindable] public var model:ExerciseModel = controller.model as ExerciseModel;
			
			[Bindable] public var date:String;
			[Bindable] private var currentPRT:String;
			[Bindable] private var currentRun:String;
			[Bindable] private var currentRunMins:String;
			[Bindable] private var currentRunSecs:String;
			[Bindable] private var currentCurlUps:String;
			[Bindable] private var currentCurlTimes:String;
			[Bindable] private var currentPushUps:String;
			[Bindable] private var currentPushTimes:String;
			[Bindable] private var currentComments:String;
			[Bindable] private var type:String;
			
			public function populateEntry():void 
			{
				for(var i:uint = 0; i < model.exerciseData.length; i++) 
				{
					if(model.exerciseData.getItemAt(i).PRTscore != '') currentPRT = model.exerciseData.getItemAt(i).PRTscore;
					if(model.exerciseData.getItemAt(i).mileRun != '') currentRun = model.exerciseData.getItemAt(i).mileRun;
					if(model.exerciseData.getItemAt(i).min != '') currentRunMins = model.exerciseData.getItemAt(i).min;
					if(model.exerciseData.getItemAt(i).sec != '') currentRunSecs = model.exerciseData.getItemAt(i).sec;
					if(model.exerciseData.getItemAt(i).curlUps != '') currentCurlUps = model.exerciseData.getItemAt(i).curlUps;
					if(model.exerciseData.getItemAt(i).curlTimes != '') currentCurlTimes = model.exerciseData.getItemAt(i).curlTimes;
					if(model.exerciseData.getItemAt(i).pushUps != '') currentPushUps = model.exerciseData.getItemAt(i).pushUps;
					if(model.exerciseData.getItemAt(i).pushTimes != '') currentPushTimes = model.exerciseData.getItemAt(i).pushTimes;
						
					if(model.exerciseData.getItemAt(i).date == date) 
					{
						currentComments = model.exerciseData.getItemAt(i).comments;
						type = model.exerciseData.getItemAt(i).type;
						break;
					}
				}
			}
			
			private function addCommentForm():void 
			{
				var myAddCommentPopup:addCommentWindowEx;
				myAddCommentPopup = addCommentWindowEx(PopUpManager.createPopUp(this.parentApplication as DisplayObject, addCommentWindowEx) as spark.components.TitleWindow);
				myAddCommentPopup.date = date;
				myAddCommentPopup.populateEntry();
				
				PopUpManager.centerPopUp(myAddCommentPopup);
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="13" paddingBottom="13" paddingLeft="5" paddingRight="13" gap="0" />
	</s:layout>

	<s:Label text="Physical Readiness Test Records" fontWeight="bold" fontSize="16" color="0x4D4D4D" paddingLeft="8" paddingBottom="16" />
	
	<s:HGroup width="100%" paddingLeft="8" paddingBottom="4">
		<s:Label fontSize="13" fontStyle="italic" color="0x4D4D4D" text="{'Entry for ' + date}" />
		<s:Spacer width="100%" />
		<s:HGroup paddingTop="-5" gap="-8" visible="{type == 'patient'}" includeInLayout="{type == 'patient'}">
			<mx:LinkButton id="btnEditVital" label="Edit" color="0x064E71" textRollOverColor="0x064E71" textSelectedColor="0x064E71" skin="{null}" rollOver="btnEditVital.styleName='linkBtnUnderline';" rollOut="btnEditVital.styleName='linkBtn';" />
			<mx:LinkButton id="btnDeleteVital" label="Delete" color="0x064E71" textRollOverColor="0x064E71" textSelectedColor="0x064E71" skin="{null}" rollOver="btnDeleteVital.styleName='linkBtnUnderline';" rollOut="btnDeleteVital.styleName='linkBtn';" />
		</s:HGroup>
		<s:Label color="0x4D4D4D" text="View only" visible="{type != 'patient'}" includeInLayout="{type != 'patient'}" />
	</s:HGroup>
	
<!--	<s:HGroup width="391" height="33" paddingLeft="-8" color="0x000000">
		<s:Label width="391" height="33" backgroundColor="0xCECECE" paddingLeft="7" verticalAlign="middle" text="{'Height is &lt;b&gt;' + 'cacac' + '&lt;/b&gt;'}" />
	</s:HGroup>
	-->
	<mx:HBox width="391" height="32" verticalAlign="middle" color="0x000000" backgroundColor="0xCECECE" horizontalGap="3">
		<s:Label text="The average PRT score is" paddingLeft="7" />
		<s:Label text="{currentPRT + ' points'}" fontWeight="bold" />
	</mx:HBox>
	<mx:HBox width="391" height="32" verticalAlign="middle" color="0x000000" horizontalGap="3">
		<s:Label text="The score for 1.5 mile run is" paddingLeft="7" />
		<s:Label text="{currentRun + ' points'}" fontWeight="bold" />
		<s:Label text=", with" paddingLeft="-2" />
		<s:Label text="{currentRunMins + ' minutes and ' + currentRunSecs + ' seconds.'}" fontWeight="bold" />
	</mx:HBox>
	<mx:HBox width="391" height="32" verticalAlign="middle" color="0x000000" backgroundColor="0xCECECE" horizontalGap="3">
		<s:Label text="The score for curl ups is" paddingLeft="7" />
		<s:Label text="{currentCurlUps + ' points'}" fontWeight="bold" />
		<s:Label text=", with" paddingLeft="-2" />
		<s:Label text="{currentCurlTimes + ' times.'}" fontWeight="bold" />
	</mx:HBox>
	<mx:HBox width="391" height="32" verticalAlign="middle" color="0x000000" horizontalGap="3">
		<s:Label text="The score for push ups is" paddingLeft="7" />
		<s:Label text="{currentPushUps + ' points'}" fontWeight="bold" />
		<s:Label text=", with" paddingLeft="-2" />
		<s:Label text="{currentPushTimes + ' times.'}" fontWeight="bold" />
	</mx:HBox>
	
	<s:HGroup width="100%" paddingLeft="8" paddingTop="23">
		<s:Label text="Comments:" />
		<s:Spacer width="100%" />
		<s:HGroup paddingTop="-6">
			<mx:LinkButton id="btnAddComment" label="+ Add comment" color="0x064E71" textRollOverColor="0x064E71" textSelectedColor="0x064E71" skin="{null}" rollOver="btnAddComment.styleName='linkBtnUnderline';" rollOut="btnAddComment.styleName='linkBtn';" click="addCommentForm()" />
		</s:HGroup>
	</s:HGroup>
	
	<s:HGroup paddingTop="4" paddingBottom="10" paddingLeft="8">
		<s:Line xFrom="0" xTo="376">
			<s:stroke>
				<s:SolidColorStroke color="0x4D4D4D" weight="1"/>
			</s:stroke>
		</s:Line>
	</s:HGroup>
	
	<s:HGroup width="100%" paddingLeft="8">
		<s:VGroup>
			<s:Label width="287" text="{currentComments}" />
			<s:Label visible="{currentComments != ''}" text="{'â€“ ' + AppProperties.getInstance().controller.model.fullname + ', ' + date}" fontStyle="italic" color="0x4D4D4D" />
		</s:VGroup>

		<s:HGroup paddingTop="-5" gap="-8" visible="{currentComments != '' &amp;&amp; type == 'patient'}" includeInLayout="{currentComments != '' &amp;&amp; type == 'patient'}">
			<mx:LinkButton id="btnEditComment" label="Edit" color="0x064E71" textRollOverColor="0x064E71" textSelectedColor="0x064E71" skin="{null}" rollOver="btnEditComment.styleName='linkBtnUnderline';" rollOut="btnEditComment.styleName='linkBtn';" />
			<mx:LinkButton id="btnDeleteComment" label="Delete" color="0x064E71" textRollOverColor="0x064E71" textSelectedColor="0x064E71" skin="{null}" rollOver="btnDeleteComment.styleName='linkBtnUnderline';" rollOut="btnDeleteComment.styleName='linkBtn';" />
		</s:HGroup>
		<s:Label color="0x4D4D4D" text="View only" visible="{currentComments != '' &amp;&amp; type != 'patient'}" includeInLayout="{currentComments != '' &amp;&amp; type != 'patient'}" paddingLeft="25" />
	</s:HGroup>
	

	<s:HGroup paddingTop="8" paddingBottom="13" paddingLeft="8">
		<s:Line xFrom="0" xTo="376">
			<s:stroke>
				<s:SolidColorStroke color="0x4D4D4D" weight="1"/>
			</s:stroke>
		</s:Line>
	</s:HGroup>
	
	<s:HGroup width="100%" horizontalAlign="right">
		<s:Button label="Close" click="PopUpManager.removePopUp(this);" styleName="buttonText" height="24" width="55" />
	</s:HGroup>
</s:TitleWindow>